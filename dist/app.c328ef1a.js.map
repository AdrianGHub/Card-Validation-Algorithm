{"version":3,"sources":["card-checker.js","app.js"],"names":["checkCardNumber","cardNumber","clearCardNumber","replace","test","Error","cardNumberArray","split","poppedArray","poppedItem","pop","multipliedNumberArray","slice","map","num","index","parseInt","reducedNumbers","toString","reduce","total","cardNames","validCardName","startsWith","length","form","document","querySelector","cardNameInput","submitBtn","errorEl","result","forms","addEventListener","e","preventDefault","messages","value","classList","add","push","innerText","join"],"mappings":";;ACAA;;;;AAGA;AAKA,IAAMyB,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,IAAMC,aAAa,GAAGF,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAtB;AACA,IAAME,SAAS,GAAGH,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;AACA,IAAMG,OAAO,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB;AACA,IAAMI,MAAM,GAAGL,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AAEAD,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkBC,gBAAlB,CAAmC,QAAnC,EAA6C,UAACC,CAAD,EAAO;AAChDA,EAAAA,CAAC,CAACC,cAAF;AACA,MAAIC,QAAQ,GAAG,EAAf;ADfJ,SAASpC,eAAT,CAAyBC,UAAzB,EAAqC;ACgBjC,ADdD,MAAMC,ICcE,IAAP,ODdoB,GAAGD,UAAU,CAACE,OAAX,CAAmB,MAAnB,EAA2B,EAA3B,CAAxB;ACeK,SAAKyB,aAAa,CAACS,KAAd,CAAoBlC,OAApB,CAA4B,MAA5B,EAAoC,EAApC,EAAwCqB,MAAxC,GAAiD,EAAtD;AACIM,ADdR,MCcQA,ADdL,OCcY,ADdL5B,CCcMoC,SAAR,CAAkBC,GAAlB,CAAsB,ADd3B,KCcK,ADdsB,QAA3B,IAAuC,QAAQnC,IAAR,CAAaF,eAAb,MAAkC,IAA5E,EAAmF;ACe3EkC,ADdJ,MCcIA,IDdE,ICcM,ADdF/B,CCcGmC,IAAT,ADdE,CCcY,ADdF,oCAAV,CAAN,OCcI;AACA,ADdP,GAFD,MAEO;AAEP,QAAMlC,eAAe,GAAGJ,eAAe,CAACK,KAAhB,CAAsB,EAAtB,CAAxB;ACaI,SAAKqB,aAAa,CAACS,KAAd,CAAoBlC,OAApB,CAA4B,MAA5B,EAAoC,EAApC,EAAwCqB,MAAxC,GAAiD,EAAtD;AACIM,ADZR,MCYQA,EDZFtB,KCYS,CAAC8B,KDZC,ICYT,CAAkBC,GAAlB,CAAsB,KAAtB,QDZgBjC,eAAP,CAAjB;ACaQ8B,MAAAA,QAAQ,CAACI,IAAT,CAAc,4CAAd;AACA,ADZR,QAAM/B,UAAU,GAAGD,WAAW,CAACE,GAAZ,EAAnB;ACIA,ADFA,QAAMC,qBAAqB,GAAGL,eAAe,CAACM,KAAhB,CAAsB,CAAtB,EAAwB,CAAC,CAAzB,EAA4BC,GAA5B,CAAgC,UAACC,GAAD,EAAMC,KAAN;AAAA,aAAgBA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkBD,GAAG,GAAG,CAAxB,GAA4BE,QAAQ,CAACF,GAAD,CAApD;ACa9D,ADb8D,KAAhC,CCa1BsB,ADbJ,QCaY,CAACZ,MAAT,GAAkB,CAAtB,EAAyB;AACrBU,ADZJ,ICYIA,CAAC,CAACC,EDZAlB,YCYF,EDZgB,GAAGN,qBAAqB,CAACO,QAAtB,GAAiCf,OAAjC,CAAyC,IAAzC,EAA+C,EAA/C,EAAmDI,KAAnD,CAAyD,EAAzD,EAA6DM,GAA7D,CAAiE,UAAAC,GAAG;ACavFgB,ADbuF,ICavFA,OAAO,CAACW,CDbmFzB,QCa3F,ADbmG,CAACF,ECahFsB,CDb+E,CAAZ,MCa3D,CAACM,IAAT,CAAc,IAAd,CAApB;AACH,ADd0F,KAApE,EAAuFvB,MAAvF,CAA8F,UAACC,KAAD,EAAQN,GAAR;AAAA,aAAgBM,KAAK,IAAIN,GAAzB;ACgBrH,ADhBqH,KAA9F,CCgBpBd,ADhBH,oBCgBA,EAAoB;AAChB+B,IAAAA,MAAM,CAACO,SAAP,CAAiBC,GAAjB,CAAqB,OAArB;AACAR,ADfN,ICeMA,IDfH,CAACd,CCeQ,CAACwB,SAAP,GAAmB,ADfP,GAAGzB,QAAQ,CAACP,UAAD,CAA1B,GCesCmB,CDfI,EAA1C,KAAiD,CAApD,EAAuD,ECeD,CAACS,KAA9B,CAAnB;AACH,ADfC,GCYF,MAGO,CDfChB,SAAS,GAAG,CAAC,YAAD,EAAe,iBAAf,EAAkC,MAAlC,CAAlB;ACgBEU,ADdF,ICcEA,MAAM,ADdJT,CCcKgB,SAAP,CAAiBC,EDdnB,CCcE,CAAqB,KAArB;AACAR,IAAAA,MAAM,CAACU,SAAP,GAAmB,0BAAgBb,aAAa,CAACS,KAA9B,CAAnB;AACH,ADdC,cAAO,IAAP;ACgBL,ADfS,CCZV,YDYgBnC,eAAe,CAACqB,UAAhB,CAA2B,IAA3B,KAAoCrB,eAAe,CAACsB,MAAhB,KAA2B,EAArE;AACGF,UAAAA,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACC;;AACJ,aAAMnB,eAAe,CAACqB,UAAhB,CAA2B,IAA3B,KAAoCrB,eAAe,CAACsB,MAAhB,KAA2B,EAArE;AACIF,UAAAA,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA;;AACJ,aAAMnB,eAAe,CAACqB,UAAhB,CAA2B,IAA3B,KAAoCrB,eAAe,CAACsB,MAAhB,KAA2B,EAArE;AACIF,UAAAA,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA;;AACJ,aAAMnB,eAAe,CAACqB,UAAhB,CAA2B,IAA3B,KAAoCrB,eAAe,CAACsB,MAAhB,KAA2B,EAArE;AACIF,UAAAA,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA;;AACJ,aAAMnB,eAAe,CAACqB,UAAhB,CAA2B,IAA3B,KAAoCrB,eAAe,CAACsB,MAAhB,KAA2B,EAArE;AACIF,UAAAA,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA;;AACJ,aAAMnB,eAAe,CAACqB,UAAhB,CAA2B,IAA3B,KAAoCrB,eAAe,CAACsB,MAAhB,KAA2B,EAArE;AACIF,UAAAA,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA;;AACJ,aAAMnB,eAAe,CAACqB,UAAhB,CAA2B,IAA3B,KAAoCrB,eAAe,CAACsB,MAAhB,KAA2B,EAArE;AACIF,UAAAA,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA;;AACJ,aAAMnB,eAAe,CAACqB,UAAhB,CAA2B,GAA3B,MAAqCrB,eAAe,CAACsB,MAAhB,KAA2B,EAA3B,IAAiCtB,eAAe,CAACsB,MAAhB,KAA2B,EAAjG,CAAN;AACIF,UAAAA,aAAa,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA;;AACJ;AACI;AA1BR;;AA4BA,qEAA8CC,aAA9C;AACD,KAlCH,MAkCS;AACL,aAAO,+CAAP;AACD;AACF;AACF;;eAEctB","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["\r\nfunction checkCardNumber(cardNumber) {\r\n\r\n   const clearCardNumber = cardNumber.replace(/\\s+/g, ''); \r\n\r\n    if(typeof clearCardNumber !== 'string' || /^\\d+$/.test(clearCardNumber) !== true ) {\r\n        throw new Error(\"Podaj numer karty w postaci liczb.\")\r\n    } else {\r\n\r\n    const cardNumberArray = clearCardNumber.split('');\r\n    \r\n    const poppedArray = [...cardNumberArray];\r\n    \r\n    const poppedItem = poppedArray.pop();\r\n    \r\n    const multipliedNumberArray = cardNumberArray.slice(0,-1).map((num, index) => index % 2 === 0 ? num * 2 : parseInt(num));\r\n    \r\n    const reducedNumbers = multipliedNumberArray.toString().replace(/,/g, '').split('').map(num => parseInt(num)).reduce((total, num) => total += num);\r\n    \r\n    \r\n  if((reducedNumbers + parseInt(poppedItem)) % 10 === 0) {\r\n      const cardNames = ['Mastercard', 'AmericanExpress', 'Visa'];\r\n      \r\n      let validCardName;\r\n      \r\n      switch(true) {\r\n          case (clearCardNumber.startsWith('51') && clearCardNumber.length === 16) :\r\n             validCardName = cardNames[0];\r\n              break;\r\n          case (clearCardNumber.startsWith('52') && clearCardNumber.length === 16) :\r\n              validCardName = cardNames[0];\r\n              break;\r\n          case (clearCardNumber.startsWith('53') && clearCardNumber.length === 16) :\r\n              validCardName = cardNames[0];\r\n              break;\r\n          case (clearCardNumber.startsWith('54') && clearCardNumber.length === 16) :\r\n              validCardName = cardNames[0];\r\n              break;\r\n          case (clearCardNumber.startsWith('55') && clearCardNumber.length === 16) :\r\n              validCardName = cardNames[0];\r\n              break;\r\n          case (clearCardNumber.startsWith('34') && clearCardNumber.length === 15) :\r\n              validCardName = cardNames[1];\r\n              break;\r\n          case (clearCardNumber.startsWith('37') && clearCardNumber.length === 15) :\r\n              validCardName = cardNames[1];\r\n              break;\r\n          case (clearCardNumber.startsWith('4')  && (clearCardNumber.length === 13 || clearCardNumber.length === 16)):\r\n              validCardName = cardNames[2];\r\n              break;\r\n          default: \r\n              false;\r\n      }\r\n      return `Twoja karta jest poprawna. Wydał ją ${validCardName}`   \r\n    } else {\r\n      return 'Niepoprawny numer karty. Spróbuj jeszcze raz.';\r\n    }\r\n  }\r\n}\r\n\r\nexport default checkCardNumber;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import checkCardNumber from './card-checker';\r\n\r\n\r\n// console.log(cardChecker('4111111111111111'));\r\n\r\n\r\n\r\n\r\nconst form = document.querySelector('form');\r\nconst cardNameInput = document.querySelector('.card-number');\r\nconst submitBtn = document.querySelector('.submit-btn');\r\nconst errorEl = document.querySelector('.error');\r\nconst result = document.querySelector('.result');\r\n\r\ndocument.forms[0].addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    let messages = [];\r\n    switch(true) {\r\n        case cardNameInput.value.replace(/\\s+/g, '').length < 13 :\r\n            errorEl.classList.add('red')\r\n            messages.push('Numer karty musi zawierać od 13 do 16 cyfr');\r\n            break;\r\n        case cardNameInput.value.replace(/\\s+/g, '').length > 16 :\r\n            errorEl.classList.add('red');\r\n            messages.push('Numer karty musi zawierać od 13 do 16 cyfr');\r\n            break;\r\n    }\r\n\r\n    if (messages.length > 0) {\r\n        e.preventDefault();\r\n        errorEl.innerText = messages.join(', ')\r\n    }\r\n    \r\n    if(checkCardNumber) {\r\n        result.classList.add('green');\r\n        result.innerText = checkCardNumber(cardNameInput.value);\r\n    } else {\r\n        result.classList.add('red');\r\n        result.innerText = checkCardNumber(cardNameInput.value);\r\n    }\r\n    \r\n})"]}